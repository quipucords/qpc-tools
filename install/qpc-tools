#!/bin/bash
#===============================================================================
#
#          FILE:  qpc-tools
#
#         USAGE:  ./qpc-tools
#
#   DESCRIPTION:  Install Quipucords server and command-line components.
#
#       OPTIONS:  -h | --help   Obtain command USAGE
#                 -e | --extra-vars  set additional variables as key=value
#===============================================================================

export PATH=$PATH:$ANSIBLE_HOME/bin
#Note: The playbook path will be sed replaced in the spec file
# to match the location of where the package is being installed.
CLI_PLAYBOOK_FILE="cli/cli_playbook.yml"
SERVER_PLAYBOOK_FILE="server/server_playbook.yml"
PLAYBOOKPATH='/qpc_tools/qpc_tools/install/ansible/'
CLI_PLAYBOOK=$PLAYBOOKPATH$CLI_PLAYBOOK_FILE
SERVER_PLAYBOOK=$PLAYBOOKPATH$SERVER_PLAYBOOK_FILE
QPC_TOOLS_VERSION='BUILD_VERSION_PLACEHOLDER'

config_usage() {
    cat <<EOM
    qpc-tools
    Version: ${QPC_TOOLS_VERSION}

    Configure Quipucords server and command-line components.

    Usage:
    $(basename $0) [-h] {install}

    Commands:
    {install}

    Options:
    -h, --help        Obtain command USAGE

EOM
    exit 0
}

install_usage() {
    cat <<EOM
    qpc-tools
    Version: ${QPC_TOOLS_VERSION}

    Install Quipucords server and command-line components.

    Usage:
    $(basename $0) install [-h] [-e]

    Options:
    -h | --help        Obtain command USAGE
    -e | --extra-vars  Set additional variables as option=value

    Extra Variables:
    * Skip install for server:
         -e install_server=false
    * Skip install for CLI:
         -e install_cli=false
    * Perform an offline install
         -e install_offline=true
    * Quipucords server version to install (defaults to the latest release):
         -e server_version=0.9.0
    * QPC cli version to install (defaults to the latest release):
         -e cli_version=0.9.0
    * Quipucords server port (defaults to 9443):
         -e server_port=8443
    * Specify if the Quipucords server port should be opened in the host firewall (defaults to true):
         -e open_port=false
    * PostgreSQL db user (defaults to 'postgres'):
         -e dbms_user=postgres
    * PostgreSQL db password (defaults to 'password')
         -e dbms_password=password
    * Quipucords server username (defaults to admin):
         -e server_username=cody
    * Quipucords server password (defaults to qpcpassw0rd):
         -e server_password=c0dy
    * Quipucords server user email address (defaults to admin@example.com):
         -e server_user_email=cody@hotmail.com
    * Controls whether to start the Quipucords server with supervisord (defaults to true):
         -e use_supervisord=false
    * Sets the fully qualified path to the installation directory for the Quipucords server (defaults to ~/quipucords):
         -e home_dir=~/volumes
    *  Sets the fully qualified path to the files needed to complete an offline installation.
         -e offline_files=~/offline
    * Sets the name of the quipucords server (defaults to quipucords):
         -e server_name=quipucords2
    * Sets the HTTP timeout length for the Quipucords server (defaults to 120):
         -e server_http_timeout=90
    * Sets the network inspection scan timeout in seconds (defaults to 10800):
         -e inspect_job_timeout=10700
    * Sets the network connection scan timeout in seconds (defaults to 600):
         -e connect_job_timeout=500
    * Sets the level of log output by Ansible during network scans (defaults to 0):
         -e ansible_log_level=10

EOM
    exit 0
}

install_cli() {
shift
# shift removes the $1 in the positional args
if [[ $EUID -ne 0 ]]
then
  echo ansible-playbook $CLI_PLAYBOOK -vv -K $*
  ansible-playbook $CLI_PLAYBOOK -vv -K $*
else
  echo ansible-playbook $CLI_PLAYBOOK -vv $*
  ansible-playbook $CLI_PLAYBOOK -vv $*
fi
if [ $? -eq 0 ]
then
  echo "CLI installation complete."
else
  echo "CLI installation failed. Review the install logs."
fi
}

install_server() {
shift
if [[ $EUID -ne 0 ]]
then
  echo ansible-playbook $SERVER_PLAYBOOK -vv -K $*
  ansible-playbook $SERVER_PLAYBOOK -vv -K $*
else
  echo ansible-playbook $SERVER_PLAYBOOK -vv $*
  ansible-playbook $SERVER_PLAYBOOK -vv $*
fi
if [ $? -eq 0 ]
then
  echo "Quipucords server installation complete."
else
  echo "Quipucords server installation failed. Review the install logs."
fi
}

if [[ ($1 == "install") ]]
then
  if [[ ($2 == "--help") || ($2 == "-h") ]]
  then
    install_usage;
  fi
  # pass the positional args for the script
  # to the function to prevent scoping issues.
  install_server $*;
  install_cli $*;
else
config_usage;
fi
