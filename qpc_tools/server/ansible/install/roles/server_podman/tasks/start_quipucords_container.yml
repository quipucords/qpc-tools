---

- name: Rename Quipucords server image file to be version specific
  command: cp "{{ server_packages }}{{ github_server_filename }}" "{{ qpc_server_version_filename }}"
  when:
    - not quipucords_image_present

- name: Set variable to indicate that the Quipucords container image load was not attempted
  set_fact:
    load_quipucords_server_attempted: false

- name: Determine if Quipucords container image load required
  set_fact:
    load_quipucords_server_attempted: true
  when:
    - not quipucords_image_present

- name: Load Quipucords container image into local container registry
  shell: "podman load -i {{ qpc_server_version_filename }}"
  become: true
  when:
    - not quipucords_image_present

- name: Read Podman images and grep for Quipucords Podman image
  shell: "podman images | grep {{ server_image_name }} | grep {{ server_image_tag }}"
  become: true
  register: quipucords_image_raw
  ignore_errors: yes
  when:
    load_quipucords_server_attempted|bool

- name: Set Quipucords Podman image presence to false (default)
  set_fact:
    quipucords_image_present: false
  when:
    - load_quipucords_server_attempted|bool
    - quipucords_image_raw.rc != 0

- name: Set Quipucords image presence to true if image present
  set_fact:
    quipucords_image_present: "{{ quipucords_image_raw['stdout_lines']|length > 0 }}"
  when:
    - load_quipucords_server_attempted|bool
    - quipucords_image_raw.rc == 0
    - "'stdout_lines' in quipucords_image_raw"

- name: Make sure Quipucords image loaded (it successfully loaded if skipped)
  fail:
    msg: "The Quipucord server's image was not found after the load was attempted."
  when:
    - load_quipucords_server_attempted|bool
    - not quipucords_image_present

# With podman we have to set the host to localhost instead of qpc-db, because podman does not create a proxy
- name: Start Quipucords server Podman container linked to PostgreSQL container
  shell: "podman run --name {{ server_name }} -p {{ server_port }}:443 -d -e USE_SUPERVISORD={{ use_supervisord }} -e QPC_SERVER_TIMEOUT={{ server_http_timeout }} -e QPC_DBMS_USER={{ db_user }} -e QPC_DBMS_PASSWORD='{{ db_password }}' -e ANSIBLE_LOG_LEVEL={{ ansible_log_level }} -e NETWORK_CONNECT_JOB_TIMEOUT={{ connect_job_timeout }} -e NETWORK_INSPECT_JOB_TIMEOUT={{ inspect_job_timeout }} -e QPC_SERVER_USERNAME={{ server_username }} -e QPC_SERVER_USER_EMAIL={{ server_user_email }} -e QPC_SERVER_PASSWORD='{{ server_password }}' -v {{ server_sshkeys_volume }}:/sshkeys{{ dir_mount_selinux }} -v {{ server_data_volume }}:/var/data{{ dir_mount_selinux }} -v {{ server_log_volume }}:/var/log{{ dir_mount_selinux }} -i {{ server_image_and_tag }}"
  become: true
  ignore_errors: yes